# This file is part of BOINC.
# http://boinc.berkeley.edu
# Copyright (C) 2023 University of California
#
# BOINC is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation,
# either version 3 of the License, or (at your option) any later version.
#
# BOINC is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with BOINC.  If not, see <http://www.gnu.org/licenses/>.

name: Flutter-Ubuntu
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron:  '0 0 * * 0'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_KEY }}
  AWS_DEFAULT_REGION: us-west-2

jobs:
  build:
    name: ${{ matrix.type }}-flutter-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [linux, android]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Setup Java
        if: matrix.type == 'android'
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup android SDK
        if: matrix.type == 'android'
        uses: android-actions/setup-android@v2

      - name: Setup flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'beta'

      - name: Setup linux desktop
        if: matrix.type == 'linux'
        run: flutter config --enable-linux-desktop

      - name: Install linux dependencies
        if: matrix.type == 'linux'
        run: |
          sudo apt update
          sudo apt install -y clang cmake ninja-build pkg-config libgtk-3-dev

      - name: Cache dependencies
        uses: actions/cache@v3
        if: matrix.type == 'linux'
        with:
          path: |
            3rdParty/buildCache
            !3rdParty/buildCache/linux/vcpkgcache/
          key: linux-flutter-client-vcpkg-${{ hashFiles('3rdParty/*Linux*.sh', 'linux/*.sh', '.github/workflows/flutter-ubuntu.yml') }}

      - name: Check if build is running from origin repo
        if: ${{ success() && env.AWS_ACCESS_KEY_ID != 0 && env.AWS_SECRET_ACCESS_KEY != 0 }}
        run: |
          echo "VCPKG_BINARY_SOURCES=clear;x-aws,s3://vcpkg.cache.boinc/,readwrite" >> $GITHUB_ENV

      - name: Check if build is running from fork
        if: ${{ success() && (env.AWS_ACCESS_KEY_ID == 0 || env.AWS_SECRET_ACCESS_KEY == 0) }}
        run: |
          echo "VCPKG_BINARY_SOURCES=clear;x-aws-config,no-sign-request;x-aws,s3://vcpkg.cache.boinc/,read" >> $GITHUB_ENV

      - name: Build linux client
        if: matrix.type == 'linux'
        run: samples/flutter/ci_build_linux.sh

      - name: Cache dependencies
        uses: actions/cache@v3
        if: matrix.type == 'android'
        with:
          path: |
            3rdParty/buildCache
            !3rdParty/buildCache/android/vcpkgcache/
          key: android-manager-vcpkg-${{ hashFiles('android/*.sh') }}

      - name: Build android client
        if: matrix.type == 'android'
        run: samples/flutter/ci_build_android.sh

      - name: Install flutter dependencies
        run: cd samples/flutter/boinc/ && flutter pub get

      - name: Build linux
        if: matrix.type == 'linux'
        run: |
          cd samples/flutter/
          flutter create boinc
          cd boinc/
          flutter build linux

      - name: Build android
        if: matrix.type == 'android'
        run: |
          cd samples/flutter/
          flutter create boinc  --org edu.berkeley
          cd boinc/
          flutter build apk

      - name: Prepare android
        if: success() && matrix.type == 'android'
        uses: edgarrc/action-7z@v1
        with:
          args: 7z a -t7z -mx=9 deploy/flutter_${{ matrix.type }}.7z -r0 samples/flutter/boinc/build/app/outputs/flutter-apk/app-release.apk

      - name: Prepare linux
        if: success() && matrix.type == 'linux'
        uses: edgarrc/action-7z@v1
        with:
          args: 7z a -t7z -mx=9 deploy/flutter_${{ matrix.type }}.7z -r0 samples/flutter/boinc/build/linux/x64/release/bundle/*

      - name: Upload ${{ matrix.type }}
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.type }}_flutter_${{ github.event.pull_request.head.sha }}
          path: deploy/flutter_${{ matrix.type }}.7z
