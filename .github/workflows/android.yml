# This file is part of BOINC.
# http://boinc.berkeley.edu
# Copyright (C) 2023 University of California
#
# BOINC is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation,
# either version 3 of the License, or (at your option) any later version.
#
# BOINC is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with BOINC.  If not, see <http://www.gnu.org/licenses/>.

name: Android
on:
  push:
    branches: [ master, 'client_release/**' ]
    tags: [ 'client_release/**' ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron:  '0 0 * * 0'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_KEY }}
  AWS_DEFAULT_REGION: us-west-2

jobs:
  build:
    name: ${{ matrix.type }}-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [manager, libs, apps, libs-cmake]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Install dependencies
        run: |
          sudo add-apt-repository universe
          sudo apt-get -qq update
          sudo apt-get install -y libncurses5

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Check if build is running from origin repo
        if: ${{ success() && env.AWS_ACCESS_KEY_ID != 0 && env.AWS_SECRET_ACCESS_KEY != 0 }}
        run: |
          echo "VCPKG_BINARY_SOURCES=clear;x-aws,s3://vcpkg.cache.boinc/,readwrite" >> $GITHUB_ENV

      - name: Check if build is running from fork
        if: ${{ success() && (env.AWS_ACCESS_KEY_ID == 0 || env.AWS_SECRET_ACCESS_KEY == 0) }}
        run: |
          echo "VCPKG_BINARY_SOURCES=clear;x-aws-config,no-sign-request;x-aws,s3://vcpkg.cache.boinc/,read" >> $GITHUB_ENV

      - name: Unset ANDROID_NDK_ROOT environment variable
        if: ${{ success() }}
        run: |
          echo ANDROID_NDK_ROOT="" >> $GITHUB_ENV

      - name: Build manager with vcpkg
        if: ${{ success() && matrix.type == 'manager' }}
        run: ./android/ci_build_vcpkg_manager.sh

      - name: Build libs with vcpkg
        if: ${{ success() && matrix.type == 'libs' }}
        run: ./android/ci_build_vcpkg_libraries.sh

      - name: Build apps with vcpkg
        if: ${{ success() && matrix.type == 'apps' }}
        run: ./android/ci_build_vcpkg_apps.sh

      - name: Build libs with cmake
        if: ${{ success() && matrix.type == 'libs-cmake' }}
        run: ./android/ci_build_libs_cmake.sh

      - name: Prepare logs on failure
        if: ${{ failure() }}
        run: python ./deploy/prepare_deployment.py logs

      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: android_logs_${{ matrix.type }}_${{ github.event.pull_request.head.sha }}
          path: deploy/logs.7z

      - name: Prepare artifacts for deploy
        if: ${{ success() && ! contains(matrix.type, 'libs') }}
        run: python ./deploy/prepare_deployment.py android_${{ matrix.type }}

      - name: Upload generic artifacts
        uses: actions/upload-artifact@v3
        if: ${{ ! contains(matrix.type, 'libs') }}
        with:
          name: android_${{ matrix.type }}_${{ github.event.pull_request.head.sha }}
          path: deploy/android_${{ matrix.type }}.7z
      - name: Upload xiaomi manager
        uses: actions/upload-artifact@v3
        if: ${{ contains(matrix.type, 'manager') }}
        with:
          name: android_xiaomi_${{ matrix.type }}_${{ github.event.pull_request.head.sha }}
          path: deploy/android_${{ matrix.type }}_xiaomi.7z
      - name: Upload armv6 only manager
        uses: actions/upload-artifact@v3
        if: ${{ contains(matrix.type, 'manager') }}
        with:
          name: android_armv6_${{ matrix.type }}_${{ github.event.pull_request.head.sha }}
          path: deploy/android_${{ matrix.type }}_armv6.7z

      - name: Upload JUnit Tests Results
        uses: actions/upload-artifact@v3
        if: always() && matrix.type == 'manager'      # run this step even if previous step failed
        with:
          name: Android_tests_results
          path: android/BOINC/app/build/test-results/testDebugUnitTest/TEST-*.xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        if: ${{ success() && matrix.type == 'manager' }}
        with:
          fail_ci_if_error: true
          verbose: false
